/**
 * Variables SCSS File
 */
/*
	* Breakpoint declatations
*/
/*
	* Layout width
*/
/*
* Grid gutter
*/
/*
* Type
*/
/**
 * Color SCSS File
 */
/**
 *
 * All color variables should start with the color- prefix, and should
 * be descriptive to the color. $color-primary-accent is better than
 * $color-primary, as it's easy to figure out exactly what the color
 * is from the variable name. Avoid using specific colours for variables
 * as these may change significantly during the build and $color-primary-red
 * may no longer be red, but instead blue.
 *
 */
/* ==|== Colors =================
	Base
========================================== */
/* ==|== Colors =================
	Elements
========================================== */
/* ==|== Colors =================
   Links
====================================== */
/* ==|== Colors =================
   Buttons
====================================== */
/* ==|== Colors =================
	Social
========================================== */
/**
 * Mixins SCSS File
 */
/**
 * Type SCSS File
 */
/**
 * Sets up basic type variables, and includes em & rem functions for easily
 * converting measurements from pixels to a more cross-browser-friendly
 * measurement.
**/
/* ==|== Type =================
	Functions
========================================== */
/**
 * Takes a pixel value, and turns it in to the corresponding em value.
 *
 * Has an optional second parameter, which alters the base em value.
 * This can be useful when calculating a measurement on an element with
 * an altered font size.

 * @param int $target 	The pixel value you're converting.
 * @param int $content 	The base em value. If no value
 *						is provided, the $font-default-size value is
 *						used.
 */
/**
 * === EXAMPLE === *

 Both these examples output a padding-left value equivalent to 30px.

 $font-default-size:20;

 .element {
 	padding-left:em(30); // => padding-left: 1.5em;
 }

.element--large {
	font-size:2rem;
	padding-left:em(30, 40); // => padding-left: 0.75em;
}
*/
/**
 * Takes a pixel value, and turns it in to the corresponding rem value.
 *
 * Has an optional second parameter, which alters the base rem value.
 * This can be useful when calculating a measurement on an element with
 * an altered font size.

 * @param int $target 	The pixel value you're converting.
 * @param int $content 	The base rem value. If no value
 *											is provided, the $font-default-size value is
 *											used.
 */
/**
 * This takes a property and coresponding pixel value(s) and outputs
 * rems and px fallback code

 * @param val $property 	The CSS property that you're using (e.g. margin)
 * @param int $values 		The value(s) that you want converted to rems (e.g
													10, 0, 20)
 */
/* ==|== Type =================
	Mixins
========================================== */
/**
 * Converts a pixel-based font size to a rem font size, with px fallback
 * for IE <= 8.
 *
 * @param int $value	The pixel value you're converting.
 * @param int $base 	The base rem value. If no value is provided, the
 * 						$font-default-size value is used.
**/
/* ==|== Type =================
	Load CSS based font-families
========================================== */
/**
 * Loads in the CSS font-face declarations based on a Sass list of fonts and their styles
 * Set the number of fonts that you want to load in in $fonts-total
 * Set the fonts themselves and make sure they're in the assets/fonts folder
 * Set the styles for the fonts, if Font-number-1 is a regular weight put normal,
 * if Font-number-2 is an italic weight put italic etc
**/
/* ==|== Type =================
	CSS3 OT font-feature-settings
========================================== */
/**
 * Gets the correct CSS3 font-feature-settings to deal with the cross-browser skullduggery
 * Use the syntax @include font-feature-settings(kern liga clig);
 * See http://blog.webink.com/opentype-features-css/ for full list of them
 * But make sure the typeface you're using has the features otherwise they won't show.
**/
/**
 * Modules fall back for unsupported browsers
 *
 * @requires framework/_type.scss, framework/_variables.scss
 */
/* ==|== Buttons =================
	Fall-back for modules/_buttons.scss

	* @requires framework/_type.scss
========================================== */
/* line 14, ../modules/_unsupported.scss */
.btn {
  padding: 0.75em 1em;
}

/* ==|== Code =================
	Fall-back for modules/_code.scss
========================================== */
/* line 22, ../modules/_unsupported.scss */
pre {
  font-size: 1rem;
  padding: 0.25em 0.5em;
}

/* ==|== Grid =================
	Fall-back for modules/_grid.scss
========================================== */
/* line 31, ../modules/_unsupported.scss */
.grid {
  margin: 0 -0.5em;
}

/* line 34, ../modules/_unsupported.scss */
.grid__unit {
  padding: 0 0.5em;
}
/* line 36, ../modules/_unsupported.scss */
.module-name .grid__unit {
  width: 25%;
}
/* line 39, ../modules/_unsupported.scss */
.module-name-2 .grid__unit {
  width: 16.66667%;
}

/* line 44, ../modules/_unsupported.scss */
.group {
  max-width: 60em;
}

/* ==|== Typography =================
	Fall-back for modules/_typography.scss
========================================== */
/* line 52, ../modules/_unsupported.scss */
h1 {
  font-size: 60px;
  font-size: 3rem;
  margin: 0.4em 0 0.2em;
}

/* line 56, ../modules/_unsupported.scss */
h2 {
  font-size: 56px;
  font-size: 2.8rem;
  margin: 0.46154em 0 0.23077em;
}

/* line 61, ../modules/_unsupported.scss */
h3 {
  font-size: 42px;
  font-size: 2.1rem;
  margin: 0.38095em 0 0.19048em;
}

/* line 66, ../modules/_unsupported.scss */
h4 {
  font-size: 36px;
  font-size: 1.8rem;
  margin: 0.44444em 0 0.22222em;
}

/* line 71, ../modules/_unsupported.scss */
h5 {
  font-size: 32px;
  font-size: 1.6rem;
  margin: 0.375em 0 0.1875em;
}

/* line 76, ../modules/_unsupported.scss */
h6 {
  font-size: 24px;
  font-size: 1.2rem;
  margin: 0.5em 0 0.25em;
}

/* line 81, ../modules/_unsupported.scss */
p {
  font-size: 20px;
  font-size: 1rem;
  margin: 0 auto 0.5em;
}

/* line 86, ../modules/_unsupported.scss */
ul,
ol {
  font-size: 1rem;
}

/**
 * UI fall back for unsupported browsers
 */
